@using Blog.Web.ViewModels
@model ComentarioViewModel

@{

    ViewData["Title"] = "Editar Comentário";
}

@await Component.InvokeAsync("Summary")

<div class="container mt-4">
    <h1 class="text-primary">Editar Comentário</h1>
    <h4>Detalhes do Comentário</h4>
    <hr />
    <div class="row">
        <div class="col-md-8 offset-md-2">
            <form asp-action="Edit">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <div class="form-group">
                    <label asp-for="Conteudo" class="control-label"></label>
                    <textarea asp-for="Conteudo" class="form-control" rows="10"></textarea>
                    <span asp-validation-for="Conteudo" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <input asp-for="IdPostagem" class="form-control" type="hidden" />
                </div>

                <input type="hidden" asp-for="Id" />

                <div class="form-group mt-3">
                    <input type="submit" value="Salvar" class="btn btn-primary" />
                    <button type="button" class="btn btn-secondary" onclick="history.back()">Voltar</button>
                </div>
            </form>
@*             <div>
                <a href="javascript:void(0);" onclick="history.back();">Voltar</a>
            </div> *@
        </div>
    </div>


</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}