@using Blog.Web.ViewModels
@model ComentarioViewModel

@{
     ViewData["Title"] = "Excluir Comentário";
}

@await Component.InvokeAsync("Summary")

<div class="container mt-4">
    <h1 class="text-danger">@ViewData["Title"]</h1>

    <h3>Você tem certeza que deseja excluir este comentário?</h3>
    <div>
        <h4>Comentário</h4>
        <hr />
        <dl class="row">
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Conteudo)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Conteudo)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.DataPostagem)
            </dt>
            <dd class="col-sm-10">
                @{
                    var dataPostagem = Model.DataPostagem.HasValue
                    ? Model.DataPostagem.Value.ToString("dd/MM/yyyy HH:mm")
                    : "N/A";
                }
                @dataPostagem
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.NomeAutor)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.NomeAutor)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.IdAutor)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.IdAutor)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Postagem)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Postagem.Conteudo)
            </dd>
        </dl>

        <form asp-action="Delete" method="post">
            <input type="hidden" asp-for="Id" />
            <button type="submit" class="btn btn-danger">Excluir</button>
            <button type="button" class="btn btn-secondary" onclick="history.back()">Voltar</button>
        </form>
    </div>
</div>